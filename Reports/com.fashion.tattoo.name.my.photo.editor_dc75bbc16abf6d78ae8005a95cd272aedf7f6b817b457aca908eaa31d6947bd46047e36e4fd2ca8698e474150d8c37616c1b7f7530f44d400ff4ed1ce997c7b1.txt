**********************************************************************************************
**           AndroBugs Framework - Android App Security Vulnerability Scanner               **
**                                    version: 2.0.0                                        **
** This tool was originally created by Yu-Cheng Lin (@AndroBugs, http://www.AndroBugs.com)  **
**                     Modifications by Jasper van Thuijl & Noam Drong                      **
**********************************************************************************************
Platform: Android
Package Name: com.fashion.tattoo.name.my.photo.editor
Package Version Name: 4.2
Package Version Code: 46
Min Sdk: 17
Target Sdk: 30
MD5   : d99f056e1426866a9c2f2bf54baf8708
SHA1  : dbe5bd6f05b45a404536eba9ca37f158e1ccf119
SHA256: 787ca66ffab8adbf87bf564a70943e002e96b01424ac2f2a2d9e0da435bc8317
SHA512: 456a8c2d023a4de7930175de0020b3756afe9a67060d9c4fbb065876dac3c9624e9a9d86c2b492fc661b972f4c2a8affc0b49f2713f7a5bf50dcdbe8fd3558ad
Analyze Signature: dc75bbc16abf6d78ae8005a95cd272aedf7f6b817b457aca908eaa31d6947bd46047e36e4fd2ca8698e474150d8c37616c1b7f7530f44d400ff4ed1ce997c7b1
------------------------------------------------------------------------------------------------
[Critical] <Hacker> Base64 String Encryption:
           Found Base64 encoding "String(s)" (Total: 1 ). We cannot guarantee all of the Strings are Base64 encoding and also we will not
           show you the decoded binary file:
               oihs170ysx5wq180o4
                   ->Original Encoding String: b2loczE3MHlzeDV3cTE4MG80
                   ->From class: Lcom/android/healper/DataUrls;->getimages_Tatto(Landroid/content/Context; Ljava/lang/String;
                    Ljava/lang/String;)Lcom/loopj/android/http/RequestParams;

[Critical] <KeyStore><Hacker> KeyStore Protection Checking:
           The Keystores below seem using "byte array" or "hard-coded cert info" to do SSL pinning (Total: 2). Please manually check:
               => Lcom/loopj/android/http/MySSLSocketFactory;->getKeystoreOfCA(Ljava/io/InputStream;)Ljava/security/KeyStore; (0x6a) --->
                    Ljava/security/KeyStore;->load(Ljava/io/InputStream; [C)V
               => Lcom/loopj/android/http/MySSLSocketFactory;->getKeystore()Ljava/security/KeyStore; (0x12) --->
                    Ljava/security/KeyStore;->load(Ljava/io/InputStream; [C)V

[Critical] <SSL_Security> SSL Connection Checking:
           URLs that are NOT under SSL (Total: 31):
               http://%s:%d/%s
                   ->From class: Lcom/facebook/ads/internal/p/b/f;->d(Ljava/lang/String;)Ljava/lang/String;
               http://c
                   ->From class: Lcom/bea/xml/stream/XMLWriterBase;->main([Ljava/lang/String;)V
               http://d
                   ->From class: Lcom/bea/xml/stream/XMLWriterBase;->main([Ljava/lang/String;)V
               http://e
                   ->From class: Lcom/bea/xml/stream/XMLWriterBase;->main([Ljava/lang/String;)V
               http://f
                   ->From class: Lcom/bea/xml/stream/XMLWriterBase;->main([Ljava/lang/String;)V
               http://google.com/
                   ->From class: Lcom/google/api/client/googleapis/batch/BatchUnparsedResponse;->getFakeResponse(I Ljava/lang/String;
                    Ljava/util/List; Ljava/util/List;)Lcom/google/api/client/http/HttpResponse;
                   ->From class: Lcom/google/api/client/testing/http/HttpTesting;-><clinit>()V
               http://maps.google.com/maps?f=d&saddr=
                   ->From class: Lcom/sku/photosuit/SinglePlaceActivity$1;->onClick(Landroid/view/View;)V
               http://maps.googleapis.com/maps/api/distancematrix/json?
                   ->From class: Lcom/android/healper/DataUrls;->getDistanceUrl(D D D D)Ljava/lang/String;
               http://oauth.net/grant_type/jwt/1.0/bearer
                   ->From class: Lcom/google/api/client/googleapis/auth/oauth2/GoogleCredential;->executeRefreshToken()Lcom/google/api/clien
                    t/auth/oauth2/TokenResponse;
               http://play.google.com/store/apps/
                   ->From class: Lcom/facebook/ads/internal/q/c/g;->a(Landroid/content/Context;)Z
               http://play.google.com/store/apps/category/GAME
                   ->From class: Lcom/google/android/gms/common/internal/GmsIntents;->createPlayStoreGamesIntent(Landroid/content/Context;)L
                    android/content/Intent;
               http://schemas.google.com/g/2005
                   ->From class: Lcom/google/api/client/googleapis/xml/atom/MultiKindFeedParser;->parseEntryInternal()Ljava/lang/Object;
               http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense
                   ->From class: Lcom/google/android/exoplayer2/drm/HttpMediaDrmCallback;-><clinit>()V
               http://unknown/
                   ->From class: Lcom/google/api/client/xml/XmlNamespaceDictionary;->getNamespaceUriForAliasHandlingUnknown(Z
                    Ljava/lang/String;)Ljava/lang/String;
               http://www.facebook.com
                   ->From class: Lcom/facebook/ads/internal/view/a/a;-><clinit>()V
               http://www.google.com
                   ->From class: Lcom/google/android/gms/internal/ads/zzagb;-><init>(Landroid/content/Context;)V
               http://www.trendingtattoo.com/
                   ->From class: Lcom/android/healper/ApiClient;->getFeedClient()Lretrofit2/Retrofit;
               http://www.trendingtattoo.com/feed/
                   ->From class: Lcom/android/utils/Utils;->geturl()Ljava/lang/String;
               http://xmlpull.org/v1/doc/features.html#names-interned
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;-><init>()V
                   ->From class: Lcom/bea/xml/stream/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lorg/xmlpull/mxp1/MXParserCachingStrings;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lorg/xmlpull/mxp1/MXParserCachingStrings;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lcom/bea/xml/stream/MXParser;->getFeature(Ljava/lang/String;)Z
               http://xmlpull.org/v1/doc/features.html#process-docdecl
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lcom/bea/xml/stream/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1/MXParserNonValidating;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1/MXParserNonValidating;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lcom/bea/xml/stream/MXParser;->getFeature(Ljava/lang/String;)Z
               http://xmlpull.org/v1/doc/features.html#process-namespaces
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lcom/bea/xml/stream/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/v1/XmlPullParserFactory;->isNamespaceAware()Z
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->parseSubTree(Lorg/xmlpull/v1/XmlPullParser;)V
                   ->From class: Lcom/bea/xml/stream/MXParser;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/v1/XmlPullParserFactory;->setNamespaceAware(Z)V
               http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes
                   ->From class: Lorg/xmlpull/v1/wrapper/classic/StaticXmlSerializerWrapper;->writeStartTag(Lorg/xmlpull/v1/XmlPullParser;)V
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->getFeature(Ljava/lang/String;)Z
               http://xmlpull.org/v1/doc/features.html#serializer-attvalue-use-apostrophe
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;-><init>()V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->getFeature(Ljava/lang/String;)Z
               http://xmlpull.org/v1/doc/features.html#validation
                   ->From class: Lorg/xmlpull/v1/XmlPullParserFactory;->isValidating()Z
                   ->From class: Lorg/xmlpull/v1/XmlPullParserFactory;->setValidating(Z)V
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lorg/xmlpull/v1/sax2/Driver;->getFeature(Ljava/lang/String;)Z
               http://xmlpull.org/v1/doc/features.html#xml-roundtrip
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lcom/bea/xml/stream/MXParser;->getFeature(Ljava/lang/String;)Z
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->setFeature(Ljava/lang/String; Z)V
                   ->From class: Lcom/bea/xml/stream/MXParser;->setFeature(Ljava/lang/String; Z)V
               http://xmlpull.org/v1/doc/features.html#xmldecl-standalone
                   ->From class: Lorg/xmlpull/v1/wrapper/classic/StaticXmlSerializerWrapper;->event(Lorg/xmlpull/v1/XmlPullParser;)V
               http://xmlpull.org/v1/doc/properties.html#serializer-indentation
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->setProperty(Ljava/lang/String; Ljava/lang/Object;)V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;-><init>()V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->getProperty(Ljava/lang/String;)Ljava/lang/Object;
               http://xmlpull.org/v1/doc/properties.html#serializer-line-separator
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->setProperty(Ljava/lang/String; Ljava/lang/Object;)V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;-><init>()V
                   ->From class: Lorg/xmlpull/mxp1_serializer/MXSerializer;->getProperty(Ljava/lang/String;)Ljava/lang/Object;
               http://xmlpull.org/v1/doc/properties.html#xmldecl-content
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getProperty(Ljava/lang/String;)Ljava/lang/Object;
               http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getProperty(Ljava/lang/String;)Ljava/lang/Object;
                   ->From class: Lorg/xmlpull/v1/builder/impl/XmlPullBuilderImpl;->parseDocumentStart(Lorg/xmlpull/v1/XmlPullParser;)Lorg/xm
                    lpull/v1/builder/XmlDocument;
               http://xmlpull.org/v1/doc/properties.html#xmldecl-version
                   ->From class: Lorg/xmlpull/mxp1/MXParser;->getProperty(Ljava/lang/String;)Ljava/lang/Object;
                   ->From class: Lorg/xmlpull/v1/builder/impl/XmlPullBuilderImpl;->parseDocumentStart(Lorg/xmlpull/v1/XmlPullParser;)Lorg/xm
                    lpull/v1/builder/XmlDocument;

[Critical] <SSL_Security> SSL Certificate Verification Checking:
           This app DOES NOT check the validation of SSL Certificate. It allows self-signed, expired or mismatch CN certificates for SSL
           connection.
               This is a critical vulnerability and allows attackers to do MITM attacks without your knowledge.
               If you are transmitting users' username or password, these sensitive information may be leaking.
               Reference:
               (1)OWASP Mobile Top 10 doc: https://www.owasp.org/index.php/Mobile_Top_10_2014-M3
               (2)Android Security book: http://goo.gl/BFb65r
               (3)https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=134807561
               This vulnerability is much more severe than Apple's "goto fail" vulnerability: http://goo.gl/eFlovw
               Please do not try to create a "X509Certificate" and override "checkClientTrusted", "checkServerTrusted", and
           "getAcceptedIssuers" functions with blank implementation.
               We strongly suggest you use the existing API instead of creating your own X509Certificate class.
               Please modify or remove these vulnerable code:

               [Confirm Vulnerable]
               => Lcom/google/android/gms/common/net/zza;
                     -> used by: Lcom/google/android/gms/common/net/SSLCertificateSocketFactory;-><clinit>()V
               => Lcom/loopj/android/http/MySSLSocketFactory$1;
                     -> used by: Lcom/loopj/android/http/MySSLSocketFactory;-><init>(Ljava/security/KeyStore;)V
               --------------------------------------------------
               [Maybe Vulnerable (Please manually confirm)]
               => Lcz/msebera/android/httpclient/conn/ssl/SSLContextBuilder$TrustManagerDelegate;
                     -> used by: Lcz/msebera/android/httpclient/conn/ssl/SSLContextBuilder;->loadTrustMaterial(Ljava/security/KeyStore;
                    Lcz/msebera/android/httpclient/conn/ssl/TrustStrategy;)Lcz/msebera/android/httpclient/conn/ssl/SSLContextBuilder;

[Critical] <WebView><Remote Code Execution><#CVE-2013-4710#> WebView RCE Vulnerability Checking:
           Found a critical WebView "addJavascriptInterface" vulnerability. This method can be used to allow JavaScript to control the host
           application.
                           This is a powerful feature, but also presents a security risk for applications targeted to API level
           JELLY_BEAN(4.2) or below, because JavaScript could use reflection to access an injected object's public fields. Use of this
           method in a WebView containing untrusted content could allow an attacker to manipulate the host application in unintended ways,
           executing Java code with the permissions of the host application.
                           Reference:
                             1."http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,
           java.lang.String) "
                             2.https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/
                             3.http://50.56.33.56/blog/?p=314
                             4.http://blog.trustlook.com/2013/09/04/alert-android-webview-addjavascriptinterface-code-execution-
           vulnerability/
                           Please modify the below code:
               => Lcom/facebook/ads/internal/view/n;->c()V (0x42) --->
                    Lcom/facebook/ads/internal/view/b/a;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lcom/facebook/ads/internal/view/b/a;-><init>(Landroid/content/Context; Ljava/lang/ref/WeakReference; I)V (0xd0) --->
                    Lcom/facebook/ads/internal/view/b/a;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lcom/google/android/gms/internal/ads/zzuf;-><init>(Landroid/content/Context; Lcom/google/android/gms/internal/ads/zzang;)V
                    (0x62) ---> Lcom/google/android/gms/internal/ads/zzass;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lcom/google/android/gms/internal/ads/zzasq;-><init>(Lcom/google/android/gms/internal/ads/zzash;
                    Lcom/google/android/gms/internal/ads/zzasi; Ljava/lang/String; Z Z Lcom/google/android/gms/internal/ads/zzci;
                    Lcom/google/android/gms/internal/ads/zzang; Lcom/google/android/gms/internal/ads/zznx;
                    Lcom/google/android/gms/ads/internal/zzbo; Lcom/google/android/gms/ads/internal/zzw;
                    Lcom/google/android/gms/internal/ads/zzhs;)V (0xe6) --->
                    Lcom/google/android/gms/internal/ads/zzass;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lcom/google/android/gms/internal/ads/zzari;-><init>(Lcom/google/android/gms/internal/ads/zzash;
                    Lcom/google/android/gms/internal/ads/zzasi; Ljava/lang/String; Z Z Lcom/google/android/gms/internal/ads/zzci;
                    Lcom/google/android/gms/internal/ads/zzang; Lcom/google/android/gms/internal/ads/zznx;
                    Lcom/google/android/gms/ads/internal/zzbo; Lcom/google/android/gms/ads/internal/zzw;
                    Lcom/google/android/gms/internal/ads/zzhs;)V (0x130) --->
                    Lcom/google/android/gms/internal/ads/zzari;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V
               => Lcom/google/android/gms/internal/ads/zzass;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V (0xc) --->
                    Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object; Ljava/lang/String;)V

[Warning]  Dynamic Code Loading:
           Dynamic code loading(DexClassLoader) found:
               => Lcom/google/android/gms/internal/ads/zzcz;->zza(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String;
                    Z)Lcom/google/android/gms/internal/ads/zzcz; (0x1b8) ---> Ldalvik/system/DexClassLoader;-><init>(Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/String; Ljava/lang/ClassLoader;)V
               => Lcom/google/android/gms/internal/ads/zzeg;->zzav()V (0x24) --->
                    Ldalvik/system/DexClassLoader;->loadClass(Ljava/lang/String;)Ljava/lang/Class;

[Warning]  External Storage Accessing:
           External storage access found (Remember DO NOT write important files to external storages):
               => Lcom/nostra13/universalimageloader/utils/StorageUtils;->getOwnCacheDirectory(Landroid/content/Context; Ljava/lang/String;
                    Z)Ljava/io/File; (0x2c) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Landroidx/core/os/EnvironmentCompat;->getStorageState(Ljava/io/File;)Ljava/lang/String; (0x34) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->getSDCardPath(Landroid/content/Context; Ljava/lang/String;)Ljava/lang/String; (0x4) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/google/android/gms/internal/ads/zznn;->zza(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String;
                    Ljava/util/Map;)V (0x52) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Constant;-><clinit>()V (0x0) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/sku/photosuit/MyApplication$3;->onScanCompleted(Ljava/lang/String; Landroid/net/Uri;)V (0xee) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/nostra13/universalimageloader/utils/StorageUtils;->getExternalCacheDir(Landroid/content/Context;)Ljava/io/File; (0x8)
                    ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->savePicture(Landroid/content/Context; Landroid/graphics/Bitmap; Ljava/lang/String; I
                    Ljava/lang/String;)Ljava/lang/String; (0x4) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/views/EraserView;->getBitmap2()Landroid/graphics/Bitmap; (0x1c6) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->getMyWorksFromSdcard()Ljava/util/ArrayList; (0xa) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Landroidx/core/content/FileProvider;->parsePathStrategy(Landroid/content/Context;
                    Ljava/lang/String;)Landroidx/core/content/FileProvider$PathStrategy; (0xcc) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->getOutputMediaFile()Ljava/io/File; (0x16) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Constant;-><clinit>()V (0xb0) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->getTotalExternalMemorySize()Ljava/lang/String; (0x10) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/views/EraserView;->reDrawRedo()V (0x16) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/facebook/ads/internal/p/b/o;->b(Landroid/content/Context;)Ljava/io/File; (0x8) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/google/android/gms/internal/ads/zzhs;->zzc(Lcom/google/android/gms/internal/ads/zzhu$zza$zzb;)V (0x2) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/isseiaoki/simplecropview/util/Utils;->getFileFromUri(Landroid/content/Context; Landroid/net/Uri;)Ljava/io/File;
                    (0x66) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/nostra13/universalimageloader/utils/StorageUtils;->getOwnCacheDirectory(Landroid/content/Context;
                    Ljava/lang/String;)Ljava/io/File; (0x28) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/sku/photosuit/StickerEditActivity;->onCreate(Landroid/os/Bundle;)V (0x35e) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/views/EraserView;->getBitmap2()Landroid/graphics/Bitmap; (0x142) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->getAvailableExternalMemorySize()Ljava/lang/String; (0x10) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/UriHelper;->getPath(Landroid/content/Context; Landroid/net/Uri;)Ljava/lang/String; (0x4c) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->initImageLoader(Landroid/content/Context;)Lcom/nostra13/universalimageloader/core/ImageLoader;
                    (0x10) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/views/EraserView;->reDrawUndo()V (0x50) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lcom/android/utils/Utils;->isPhotoExistInSDCard(Landroid/content/Context; Ljava/lang/String;)Z (0x4) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;

[Warning] <Sensitive_Information> Getting ANDROID_ID:
           This app has code getting the 64-bit number "Settings.Secure.ANDROID_ID".
                    ANDROID_ID seems a good choice for a unique device identifier. There are downsides: First, it is not 100% reliable on
           releases of Android prior to 2.2 (Froyo).
                    Also, there has been at least one widely-observed bug in a popular handset from a major manufacturer, where every
           instance has the same ANDROID_ID.
                    If you want to get an unique id for the device, we suggest you use "Installation" framework in the following article.
                    Please check the reference: http://android-developers.blogspot.tw/2011/03/identifying-app-installations.html

               => Lcom/android/utils/Utils;->getUserId(Landroid/content/Context;)Ljava/lang/String; (0x10) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
               => Lcom/google/android/gms/internal/ads/zzamu;->zzbc(Landroid/content/Context;)Ljava/lang/String; (0x14) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
               => Lcom/google/android/gms/internal/ads/zzamu;->zzbd(Landroid/content/Context;)Ljava/lang/String; (0x14) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;

[Warning] <WebView> WebView Local File Access Attacks Checking:
           Found "setAllowFileAccess(true)" or not set(enabled by default) in WebView. The attackers could inject malicious script into
           WebView and exploit the opportunity to access local resources. This can be mitigated or prevented by disabling local file system
           access. (It is enabled by default)
                    Note that this enables or disables file system access only. Assets and resources are still accessible using
           file:///android_asset and file:///android_res.
                    The attackers can use "mWebView.loadUrl("file:///data/data/[Your_Package_Name]/[File]");" to access app's local file.
                    Reference: (1)https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/
                               (2)http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess(boolean)
                    Please add or modify "yourWebView.getSettings().setAllowFileAccess(false)" to your WebView:

               Methods where WebSettings is used, and setAllowFileAccess might be enabled by default:
               => Lcom/facebook/ads/internal/adapters/n;->a(Landroid/content/Context; Z)V
               => Lcom/facebook/ads/internal/q/c/a;->d()V
               => Lcom/facebook/ads/internal/q/c/b;->b(Landroid/webkit/WebView;)V
               => Lcom/facebook/ads/internal/q/c/d;->c(Landroid/content/Context; Z)Ljava/lang/String;
               => Lcom/facebook/ads/internal/q/c/d;->c(Landroid/content/Context;)Ljava/lang/String;
               => Lcom/facebook/ads/internal/view/b/a;-><init>(Landroid/content/Context; Ljava/lang/ref/WeakReference; I)V
               => Lcom/facebook/ads/internal/view/n;->d()Lcom/facebook/ads/internal/view/b/a;
               => Lcom/google/android/gms/ads/internal/zzbp;-><init>(Landroid/content/Context; Lcom/google/android/gms/internal/ads/zzjn;
                    Ljava/lang/String; Lcom/google/android/gms/internal/ads/zzang;)V
               => Lcom/google/android/gms/internal/ads/zzakk;->zza(Landroid/content/Context; Ljava/lang/String;
                    Landroid/webkit/WebSettings;)V
               => Lcom/google/android/gms/internal/ads/zzakk;->zzam(Landroid/content/Context;)Ljava/lang/String;
               => Lcom/google/android/gms/internal/ads/zzaku;->call()Ljava/lang/Object;
               => Lcom/google/android/gms/internal/ads/zzakw;->zza(Landroid/content/Context; Landroid/webkit/WebSettings;)Z
               => Lcom/google/android/gms/internal/ads/zzakw;->zzaw(Landroid/content/Context;)V
               => Lcom/google/android/gms/internal/ads/zzaky;->zza(Landroid/content/Context; Landroid/webkit/WebSettings;)Z
               => Lcom/google/android/gms/internal/ads/zzamo;->call()Ljava/lang/Object;
               => Lcom/google/android/gms/internal/ads/zzamp;->call()Ljava/lang/Object;
               => Lcom/google/android/gms/internal/ads/zzgm;->run()V
               => Lcom/sku/photosuit/PrivacyPolicy;->onCreate(Landroid/os/Bundle;)V

[Warning] <WebView> WebView Potential XSS Attacks Checking:
           Found "setJavaScriptEnabled(true)" in WebView, which could exposed to potential XSS attacks. Please check the web page code
           carefully and sanitize the output:
               => Lcom/google/android/gms/internal/ads/zzass;-><init>(Lcom/google/android/gms/internal/ads/zzash;)V (0xb2) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lcom/google/android/gms/ads/internal/zzbp;-><init>(Landroid/content/Context; Lcom/google/android/gms/internal/ads/zzjn;
                    Ljava/lang/String; Lcom/google/android/gms/internal/ads/zzang;)V (0x68) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lcom/google/android/gms/internal/ads/zzari;-><init>(Lcom/google/android/gms/internal/ads/zzash;
                    Lcom/google/android/gms/internal/ads/zzasi; Ljava/lang/String; Z Z Lcom/google/android/gms/internal/ads/zzci;
                    Lcom/google/android/gms/internal/ads/zzang; Lcom/google/android/gms/internal/ads/zznx;
                    Lcom/google/android/gms/ads/internal/zzbo; Lcom/google/android/gms/ads/internal/zzw;
                    Lcom/google/android/gms/internal/ads/zzhs;)V (0xaa) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lcom/facebook/ads/internal/q/c/a;->d()V (0x2c) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lcom/sku/photosuit/PrivacyPolicy;->onCreate(Landroid/os/Bundle;)V (0x34) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V

[Notice] <Command> Executing "root" or System Privilege Checking:
           The app may has the code checking for "root" permission, mounting filesystem operations or monitoring system:
               su
                   ->From class: Lcom/google/common/net/TldPatterns;-><clinit>()V
                   ->From class: Lcom/facebook/ads/internal/q/a/g;->a()Lcom/facebook/ads/internal/q/a/g$a;
               /system/bin/logcat
                   ->From class: Lcom/google/android/gms/common/util/CrashUtils;->zza(Landroid/content/Context; Ljava/lang/String;
                    Ljava/lang/String; I)Ljava/lang/String;

[Notice] <Database><#CVE-2011-3901#> Android SQLite Databases Vulnerability Checking:
           This app is using Android SQLite databases but it's "NOT" suffering from SQLite Journal Information Disclosure Vulnerability.
[Notice]  File Unsafe Delete Checking:
           Everything you delete may be recovered by any user or attacker, especially rooted devices.
               Please make sure do not use "file.delete()" to delete essential files.
               Check this video: https://www.youtube.com/watch?v=tGw1fxUD-uY
               => Lcom/app/wallpaper/FlickerViewImage;->onClick(Landroid/view/View;)V (0x1ac) ---> Ljava/io/File;->delete()Z
               => Lokhttp3/internal/io/FileSystem$1;->delete(Ljava/io/File;)V (0x0) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/LimitedAgeDiskCache;->get(Ljava/lang/String;)Ljava/io/File; (0x64) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/multidex/MultiDexExtractor;->clearDexDir()V (0xb2) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/DashActivity$38;->onClick(Landroid/view/View;)V (0x72) ---> Ljava/io/File;->delete()Z
               => Lcom/google/common/io/Files;->move(Ljava/io/File; Ljava/io/File;)V (0x3e) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzam;->zza()V (0xb2) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromInputStream(Landroid/content/Context;
                    Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x34) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/Util;->deleteContents(Ljava/io/File;)V (0x2a) ---> Ljava/io/File;->delete()Z
               => Lcom/loopj/android/http/FileAsyncHttpResponseHandler;->deleteTargetFile()Z (0x14) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatApi21Impl;->createFromFontFamilyFilesResourceEntry(Landroid/content/Context;
                    Landroidx/core/content/res/FontResourcesParserCompat$FontFamilyFilesResourceEntry; Landroid/content/res/Resources;
                    I)Landroid/graphics/Typeface; (0x8a) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/BaseDiskCache;->save(Ljava/lang/String; Landroid/graphics/Bitmap;)Z
                    (0x80) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/content/FileProvider;->delete(Landroid/net/Uri; Ljava/lang/String; [Ljava/lang/String;)I (0xc) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromResourcesFontFile(Landroid/content/Context;
                    Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface; (0x3e) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/CachedContent;->removeSpan(Lcom/google/android/exoplayer2/upstream/cache/Cac
                    heSpan;)Z (0x14) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatUtil;->copyToDirectBuffer(Landroid/content/Context; Landroid/content/res/Resources;
                    I)Ljava/nio/ByteBuffer; (0x36) ---> Ljava/io/File;->delete()Z
               => Lcom/android/utils/Utils;->removeDirectory(Ljava/io/File;)Z (0x8e) ---> Ljava/io/File;->delete()Z
               => Lcom/facebook/ads/internal/p/b/a/d;->e(Ljava/io/File;)V (0x0) ---> Ljava/io/File;->delete()Z
               => Landroidx/multidex/MultiDex;->clearOldDexDir(Landroid/content/Context;)V (0x16c) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzam;->zza(Ljava/lang/String; Lcom/google/android/gms/internal/ads/zzc;)V (0x1f2)
                    ---> Ljava/io/File;->delete()Z
               => Lcom/android/volley/toolbox/DiskBasedCache;->remove(Ljava/lang/String;)V (0xa) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream; (0x7e) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache;->remove(Ljava/lang/String;)Z (0x52) --->
                    Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->deleteIfExists(Ljava/io/File;)V (0xc) ---> Ljava/io/File;->delete()Z
               => Lcom/android/volley/toolbox/DiskBasedCache;->initialize()V (0xb2) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/SimpleCache;->commitFile(Ljava/io/File;)V (0x5c) --->
                    Ljava/io/File;->delete()Z
               => Lcom/android/utils/Utils;->deletefromSDCard(Landroid/content/Context; Ljava/io/File;)V (0x1a) --->
                    Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/MyWorksActivity$19;->onPostExecute(Ljava/lang/Void;)V (0x3e) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->open(Ljava/io/File; I I J)Lcom/bumptech/glide/disklrucache/DiskLruCache;
                    (0x44) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/CacheDataSink;->closeCurrentOutputStream()V (0x5e) --->
                    Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache;->deleteIfExists(Ljava/io/File;)V (0xc) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatApi21Impl;->createFromFontFamilyFilesResourceEntry(Landroid/content/Context;
                    Landroidx/core/content/res/FontResourcesParserCompat$FontFamilyFilesResourceEntry; Landroid/content/res/Resources;
                    I)Landroid/graphics/Typeface; (0x6c) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/SplashActivity$28;->onPostExecute(Ljava/lang/Void;)V (0x3e) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->rebuildJournal()V (0x198) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V (0x14) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/util/AtomicFile;->delete()V (0xe) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/Util;->createTempDirectory(Landroid/content/Context; Ljava/lang/String;)Ljava/io/File;
                    (0x12) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromInputStream(Landroid/content/Context;
                    Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x46) ---> Ljava/io/File;->delete()Z
               => Lcom/android/utils/Utils;->SaveFinalEffectImage(Landroid/content/Context; Landroid/graphics/Bitmap;
                    Ljava/lang/String;)Ljava/lang/String; (0x8e) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/DashActivity$35;->onPostExecute(Ljava/lang/Void;)V (0x42) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzaqn;->zzdp(Ljava/lang/String;)Z (0x106) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatApi21Impl;->createFromFontFamilyFilesResourceEntry(Landroid/content/Context;
                    Landroidx/core/content/res/FontResourcesParserCompat$FontFamilyFilesResourceEntry; Landroid/content/res/Resources;
                    I)Landroid/graphics/Typeface; (0x40) ---> Ljava/io/File;->delete()Z
               => Landroidx/multidex/MultiDexExtractor;->extract(Ljava/util/zip/ZipFile; Ljava/util/zip/ZipEntry; Ljava/io/File;
                    Ljava/lang/String;)V (0x1fe) ---> Ljava/io/File;->delete()Z
               => Lcom/google/common/io/FileBackedOutputStream;->reset()V (0x44) ---> Ljava/io/File;->delete()Z
               => Lcom/google/common/io/FileBackedOutputStream;->reset()V (0xc4) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/PracticeImageActivity$10;->onTaskCompleted()V (0xac) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromResourcesFontFile(Landroid/content/Context;
                    Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface; (0x34) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromResourcesFontFile(Landroid/content/Context;
                    Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface; (0x46) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/ext/Util;->deleteContents(Ljava/io/File;)V (0x2a) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatUtil;->copyToDirectBuffer(Landroid/content/Context; Landroid/content/res/Resources;
                    I)Ljava/nio/ByteBuffer; (0x2c) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzam;->zza(Ljava/lang/String; Lcom/google/android/gms/internal/ads/zzc;)V (0x96) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/core/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V (0x14) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatApi21Impl;->createFromFontFamilyFilesResourceEntry(Landroid/content/Context;
                    Landroidx/core/content/res/FontResourcesParserCompat$FontFamilyFilesResourceEntry; Landroid/content/res/Resources;
                    I)Landroid/graphics/Typeface; (0x82) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/BaseDiskCache;->save(Ljava/lang/String; Ljava/io/InputStream;
                    Lcom/nostra13/universalimageloader/utils/IoUtils$CopyListener;)Z (0x80) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->delete()V (0x4) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/BaseDiskCache;->remove(Ljava/lang/String;)Z (0x8) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromInputStream(Landroid/content/Context;
                    Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x1c) ---> Ljava/io/File;->delete()Z
               => Lcom/android/utils/Utils;->removeDirectory(Ljava/io/File;)Z (0x62) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/upstream/cache/SimpleCache;->initialize()V (0x8e) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatUtil;->copyToDirectBuffer(Landroid/content/Context; Landroid/content/res/Resources;
                    I)Ljava/nio/ByteBuffer; (0x1c) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/BaseDiskCache;->save(Ljava/lang/String; Landroid/graphics/Bitmap;)Z
                    (0x96) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/util/AtomicFile;->openRead()Ljava/io/FileInputStream; (0x14) ---> Ljava/io/File;->delete()Z
               => Landroidx/documentfile/provider/RawDocumentFile;->deleteContents(Ljava/io/File;)Z (0x32) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->restoreBackup()V (0x14) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/common/data/BitmapTeleporter;->zzcj()Ljava/io/FileOutputStream; (0x32) --->
                    Ljava/io/File;->delete()Z
               => Lcom/android/volley/toolbox/DiskBasedCache;->clear()V (0x20) ---> Ljava/io/File;->delete()Z
               => Lcom/facebook/ads/internal/p/b/a/e;->a(Ljava/util/List;)V (0x44) ---> Ljava/io/File;->delete()Z
               => Lcom/android/utils/Utils;->saveCropTattooTemp(Landroid/content/Context; Landroid/graphics/Bitmap;)Ljava/lang/String;
                    (0x5a) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatApi21Impl;->createFromFontFamilyFilesResourceEntry(Landroid/content/Context;
                    Landroidx/core/content/res/FontResourcesParserCompat$FontFamilyFilesResourceEntry; Landroid/content/res/Resources;
                    I)Landroid/graphics/Typeface; (0x74) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache;->rebuildJournal()V (0x198) --->
                    Ljava/io/File;->delete()Z
               => Landroidx/core/util/AtomicFile;->delete()V (0x4) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/BaseDiskCache;->save(Ljava/lang/String; Ljava/io/InputStream;
                    Lcom/nostra13/universalimageloader/utils/IoUtils$CopyListener;)Z (0xb2) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/MyWorksActivity$19;->onPostExecute(Ljava/lang/Void;)V (0x24) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->remove(Ljava/lang/String;)Z (0x4a) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/SplashActivity$28;->onPostExecute(Ljava/lang/Void;)V (0x24) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzaqn;->zzdp(Ljava/lang/String;)Z (0xea) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->startWrite()Ljava/io/OutputStream; (0x7e) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromInputStream(Landroid/content/Context;
                    Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x3e) ---> Ljava/io/File;->delete()Z
               => Lcom/android/volley/toolbox/DiskBasedCache;->put(Ljava/lang/String; Lcom/android/volley/Cache$Entry;)V (0x88) --->
                    Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache;->open(Ljava/io/File; I I J
                    I)Lcom/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache; (0x48) ---> Ljava/io/File;->delete()Z
               => Landroidx/documentfile/provider/RawDocumentFile;->delete()Z (0xe) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzam;->remove(Ljava/lang/String;)V (0xa) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzaqn;->zzdp(Ljava/lang/String;)Z (0xb1c) ---> Ljava/io/File;->delete()Z
               => Lcom/google/common/io/Files;->move(Ljava/io/File; Ljava/io/File;)V (0x4a) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/gms/internal/ads/zzcz;->zzb(Ljava/io/File;)V (0x38) ---> Ljava/io/File;->delete()Z
               => Lcom/android/volley/toolbox/DiskBasedCache;->pruneIfNeeded(I)V (0x8e) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/DashActivity$34;->onPreExecute()V (0x12) ---> Ljava/io/File;->delete()Z
               => Lcz/msebera/android/httpclient/impl/client/cache/FileResource;->dispose()V (0x18) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/utils/DiskCacheUtils;->removeFromCache(Ljava/lang/String;
                    Lcom/nostra13/universalimageloader/cache/disc/DiskCache;)Z (0x18) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/Util;->recursiveDelete(Ljava/io/File;)V (0x2c) ---> Ljava/io/File;->delete()Z
               => Lcom/android/utils/Utils;->removeDirectory(Ljava/io/File;)Z (0xaa) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->delete()V (0xe) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/graphics/TypefaceCompatBaseImpl;->createFromResourcesFontFile(Landroid/content/Context;
                    Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface; (0x1c) ---> Ljava/io/File;->delete()Z
               => Lcom/nostra13/universalimageloader/cache/disc/impl/BaseDiskCache;->clear()V (0x1c) ---> Ljava/io/File;->delete()Z
               => Landroidx/multidex/MultiDex;->clearOldDexDir(Landroid/content/Context;)V (0xf8) ---> Ljava/io/File;->delete()Z
               => Landroidx/multidex/MultiDexExtractor;->extract(Ljava/util/zip/ZipFile; Ljava/util/zip/ZipEntry; Ljava/io/File;
                    Ljava/lang/String;)V (0x134) ---> Ljava/io/File;->delete()Z
               => Lokhttp3/internal/io/FileSystem$1;->deleteContents(Ljava/io/File;)V (0x2a) ---> Ljava/io/File;->delete()Z
               => Lcom/google/android/exoplayer2/util/AtomicFile;->endWrite(Ljava/io/OutputStream;)V (0xa) ---> Ljava/io/File;->delete()Z
               => Lcom/sku/photosuit/DashActivity$35;->onPostExecute(Ljava/lang/Void;)V (0x5c) ---> Ljava/io/File;->delete()Z
               => Lcom/google/common/io/FileBackedOutputStream;->update(I)V (0x34) ---> Ljava/io/File;->deleteOnExit()V

[Notice] <Debug><Hacker> Codes for Checking Android Debug Mode:
           Detected code that checks whether debug mode is enabled in:
               Lcom/google/android/gms/common/GoogleSignatureVerifier;->zza(Landroid/content/pm/PackageInfo;)Lcom/google/android/gms/common/
                    zzg;

[Notice] <Hacker> APK Installing Source Checking:
           This app has code checking APK installer sources(e.g. from Google Play, from Amazon, etc.). It might be used to check for whether
           the app is hacked by the attackers.
               => Lcom/facebook/ads/internal/g/b;->e()Ljava/lang/String; (0x24) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
               => Lcom/facebook/ads/internal/o/c$1;->run()V (0xf6) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;

[Notice] <KeyStore><Hacker> KeyStore Protection Information:
           The Keystores below are "protected" by password and seem using SSL-pinning (Total: 1). You can use "Portecle" tool to manage the
           certificates in the KeyStore:
               => Lcom/google/api/client/auth/security/PrivateKeys;->loadFromKeyStore(Ljava/security/KeyStore; Ljava/io/InputStream;
                    Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;)Ljava/security/PrivateKey; (0x8) --->
                    Ljava/security/KeyStore;->load(Ljava/io/InputStream; [C)V

[Notice] <Signature><Hacker> Getting Signature Code Checking:
           This app has code checking the package signature in the code. It might be used to check for whether the app is hacked by the
           attackers.
               => Landroidx/core/provider/FontsContractCompat;->getProvider(Landroid/content/pm/PackageManager;
                    Landroidx/core/provider/FontRequest; Landroid/content/res/Resources;)Landroid/content/pm/ProviderInfo; (0x36) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Lcom/google/android/gms/common/util/UidVerifier;->isGooglePlayServicesUid(Landroid/content/Context; I)Z (0x20) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Lcom/sku/photosuit/SplashActivity;->onCreate(Landroid/os/Bundle;)V (0xe2) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Lcom/google/android/gms/common/GooglePlayServicesUtilLight;->zza(Landroid/content/Context; Z I)I (0x50) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Lcom/facebook/ads/internal/q/a/g;->b(Landroid/content/Context;)Ljava/lang/String; (0x1e) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;

[Notice]  Native Library Loading Checking:
           Native library loading codes(System.loadLibrary(...)) found:
               [libgpuimage-library.so]
               => Ljp/co/cyberagent/android/gpuimage/GPUImageNativeLibrary;-><clinit>()V (0x4) --->
                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V

[Notice]  AndroidManifest Exported Components Checking 2:
           Found "exported" components(except for Launcher) for receiving Google's "Android" actions (AndroidManifest.xml):
                 receiver => com.sku.feeds.Alarm
                 receiver => com.android.alarmservice.DeviceBootReceiver

[Info]  AndroidManifest Adb Backup Checking:
           This app has disabled Adb Backup.
[Info] <Command> Runtime Command Checking:
           This app is not using critical function 'Runtime.getRuntime().exec("...")'.
[Info] <Database> SQLiteDatabase Transaction Deprecated Checking:
           Ignore checking "SQLiteDatabase:beginTransactionNonExclusive" because your set minSdk >= 11.
[Info] <Database> Android SQLite Databases Encryption (SQLite Encryption Extension (SEE)):
           This app is "NOT" using SQLite Encryption Extension (SEE) on Android (http://www.sqlite.org/android) to encrypt or decrpyt
           databases.
[Info] <Database> Android SQLite Databases Encryption (SQLCipher):
           This app is "NOT" using SQLCipher(http://sqlcipher.net/) to encrypt or decrpyt databases.
[Info] <Debug> Android Debug Mode Checking:
           DEBUG mode is OFF(android:debuggable="false") in AndroidManifest.xml.
[Info] <#BID 64208, CVE-2013-6271#> Fragment Vulnerability Checking:
           Did not detect the vulnerability of "Fragment" dynamically loading into "PreferenceActivity" or "SherlockPreferenceActivity"
[Info] <Framework> App framework identification:
           No frameworks detected (checking for Xamarin, Flutter, React Native). Furthermore, no encryption frameworks were detected
           (checking for iJiami, Bangcle)
[Info] <Database><Hacker> Key for Android SQLite Databases Encryption:
           Did not find using the symmetric key(PRAGMA key) to encrypt the SQLite databases (It's still possible that it might use but we
           did not find out).
[Info] <Debug> Android Debug Certificate Checking:
           App is signed with a production certificate. This is good.
[Info] <KeyStore><Hacker> KeyStore File Location:
           Did not find any possible BKS keystores or certificate keystore file (Notice: It does not mean this app does not use keystore):
[Info] <Hacker> Code Setting Preventing Screenshot Capturing:
           Did not detect this app has code setting preventing screenshot capturing.
[Info]  HttpURLConnection Android Bug Checking:
           Ignore checking "http.keepAlive" because you're not using "HttpURLConnection" and min_Sdk > 8.
[Info] <KeyStore> KeyStore Type Checking:
           KeyStore 'BKS' type check OK
[Info]  Google Cloud Messaging Suggestion:
           Nothing to suggest.
[Info] <#CVE-2013-4787#> Master Key Type I Vulnerability:
           No Master Key Type I Vulnerability in this APK.
[Info]  App Sandbox Permission Checking:
           No security issues "MODE_WORLD_READABLE" or "MODE_WORLD_WRITEABLE" found on 'openOrCreateDatabase' or 'openOrCreateDatabase2' or
           'getDir' or 'getSharedPreferences' or 'openFileOutput'
[Info]  AndroidManifest Dangerous ProtectionLevel of Permission Checking:
           No "dangerous" protection level customized permission found (AndroidManifest.xml).
[Info]  AndroidManifest PermissionGroup Checking:
           PermissionGroup in permission tag of AndroidManifest sets correctly.
[Info] <Implicit_Intent> Implicit Service Checking:
           No dangerous implicit service.
[Info]  AndroidManifest "intent-filter" Settings Checking:
           "intent-filter" of AndroidManifest.xml check OK.
[Info]  AndroidManifest Normal ProtectionLevel of Permission Checking:
           No default or "normal" protection level customized permission found (AndroidManifest.xml).
[Info] <#CVE-2013-6272#> AndroidManifest Exported Lost Prefix Checking:
           No exported components that forgot to add "android:" prefix.
[Info]  AndroidManifest ContentProvider Exported Checking:
           No exported "ContentProvider" found (AndroidManifest.xml).
[Info] <Sensitive_Information> Getting IMEI and Device ID:
           Did not detect this app is getting the "device id(IMEI)" by "TelephonyManager.getDeviceId()" approach.
[Info]  Codes for Sending SMS:
           Did not detect this app has code for sending SMS messages (sendDataMessage, sendMultipartTextMessage or sendTextMessage).
[Info] <System> AndroidManifest sharedUserId Checking:
           This app does not use "android.uid.system" sharedUserId.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Custom Classes):
           Self-defined HOSTNAME VERIFIER checking OK.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Fields):
           Critical vulnerability "ALLOW_ALL_HOSTNAME_VERIFIER" field setting or "AllowAllHostnameVerifier" class instance not found.
[Info] <SSL_Security> SSL Implementation Checking (Insecure component):
           Did not detect SSLSocketFactory by insecure method "getInsecure".
[Info] <SSL_Security> SSL Implementation Checking (HttpHost):
           DEFAULT_SCHEME_NAME for HttpHost check: OK
[Info] <SSL_Security> SSL Implementation Checking (WebViewClient for WebView):
           Did not detect critical usage of "WebViewClient"(MITM Vulnerability).
[Info] <Strandhogg> Standhogg 2.0:
           This application does not seem to be vulnerable to the Standhogg 2.0 vulnerability
[Info]  Unnecessary Permission Checking:
           Permission 'android.permission.ACCESS_MOCK_LOCATION' sets correctly.
[Info]  Accessing the Internet Checking:
           This app is using the Internet via HTTP protocol.
[Info]  AndroidManifest System Use Permission Checking:
           No system-level critical use-permission found.
------------------------------------------------------------
AndroBugs analyzing time: 4.041075 secs
HACKER_DEBUGGABLE_CHECK elapsed time: 0.5843013220001012 secs
Total elapsed time: 49.447089 secs
