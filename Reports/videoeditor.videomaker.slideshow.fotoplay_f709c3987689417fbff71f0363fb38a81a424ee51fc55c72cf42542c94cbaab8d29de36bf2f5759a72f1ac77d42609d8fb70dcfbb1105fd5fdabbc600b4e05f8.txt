**********************************************************************************************
**           AndroBugs Framework - Android App Security Vulnerability Scanner               **
**                                    version: 2.0.0                                        **
** This tool was originally created by Yu-Cheng Lin (@AndroBugs, http://www.AndroBugs.com)  **
**                     Modifications by Jasper van Thuijl & Noam Drong                      **
**********************************************************************************************
Platform: Android
Package Name: videoeditor.videomaker.slideshow.fotoplay
Package Version Name: 3.8.8
Package Version Code: 200
Min Sdk: 24
Target Sdk: 29
MD5   : d214e4ce003bedc8f9a8d7dca21d92e7
SHA1  : a01668c6da010adef17cbca9b9b94638841be9c8
SHA256: a9b53ae8183a620abf0b942f76e2bd790914436e51167d6337cbd4412ee902e6
SHA512: 5c19620e21e71cdecaede708988b13751fa39016b043bd1374fb6d1abb9f981bbbb43bb14e4f90d0334793e0768614dd3caf289af01a118e9b3ca6300f961e0d
Analyze Signature: f709c3987689417fbff71f0363fb38a81a424ee51fc55c72cf42542c94cbaab8d29de36bf2f5759a72f1ac77d42609d8fb70dcfbb1105fd5fdabbc600b4e05f8
------------------------------------------------------------------------------------------------
[Critical] <SSL_Security> SSL Connection Checking:
           URLs that are NOT under SSL (Total: 15):
               http://cloud.youjia-studio.com/
                   ->From class: Lo/a/a/b/b/c;->v(Ljava/lang/String;)V
                   ->From class: Lo/a/a/b/r/e$a;->c(Lorg/json/JSONObject;)V
                   ->From class: Lo/a/a/b/r/e$a;->d(Lorg/json/JSONObject;)V
                   ->From class: Lo/a/a/b/b/a;->h(Ljava/lang/String; Ljava/lang/String;)V
                   ->From class: Lo/a/a/b/b/a;->j(Ljava/lang/String; Ljava/lang/String;
                    Lphotoeffect/photomusic/slideshow/baselibs/videoinfo/NewBannerBean;)V
                   ->From class: Lo/a/a/b/b/a;->i(Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;)V
               http://cloud.youjia-studio.com/effect/videos/
                   ->From class: Lo/a/a/b/b/a;->n(Ljava/lang/String;)V
               http://cloud.youjia-studio.com/fotoplay/background/
                   ->From class: Lo/a/a/b/b/a;->l(Ljava/lang/String;)V
               http://cloud.youjia-studio.com/fotoplay/cover/
                   ->From class: Lo/a/a/b/b/a;->m(Ljava/lang/String;)V
               http://cloud.youjia-studio.com/fotoplay/music3
                   ->From class: Lo/a/a/b/b/a;->k(Lphotoeffect/photomusic/slideshow/baselibs/videoinfo/MusicInfoBean;)V
               http://cloud.youjia-studio.com/fotoplay/remote/remote_2021_10/remote_config.json
                   ->From class: Lo/a/a/b/r/e;->e(Landroid/content/Context;)V
               http://cloud.youjia-studio.com/fotoplay/remote/test/remote_config.json
                   ->From class: Lo/a/a/b/r/e;->e(Landroid/content/Context;)V
               http://cloud.youjia-studio.com/fotoplay/tran/
                   ->From class: Lo/a/a/b/b/a;->r(Ljava/lang/String;)V
               http://cloud.youjia-studio.com/fotoplayframe/
                   ->From class: Lo/a/a/b/b/a;->o(Ljava/lang/String; Ljava/lang/String;)V
               http://cloud.youjia-studio.com/sticker_2/sticker_resource/
                   ->From class: Lo/a/a/b/b/a;->p(Ljava/lang/String;)V
               http://cloud.youjia-studio.com/test/online_shop_version.json
                   ->From class: Lo/a/a/b/r/g$b;->run()V
               http://instagram.com/_u/fotoplay.app
                   ->From class: Lvideoeditor/videomaker/slideshow/fotoplay/activity/SetingActivity$3;->Click(I Ljava/lang/Object;)Z
               http://ns.adobe.com/xap/1.0/
                   ->From class: Le/f/b/d/h/a/c14;->g(Le/f/b/d/h/a/jz3; Le/f/b/d/h/a/a04;)I
               http://www.android.com/
                   ->From class: Lcom/facebook/soloader/SoLoader;->i(Ljava/lang/String; I)Z
               http://www.google.com
                   ->From class: Le/f/b/d/h/a/ze0;-><init>(Landroid/content/Context;)V
                   ->From class: Le/f/b/d/h/a/oc2;->a()Le/f/b/d/h/a/mc2;

[Critical] <WebView><Remote Code Execution><#CVE-2013-4710#> WebView RCE Vulnerability Checking:
           Found a critical WebView "addJavascriptInterface" vulnerability. This method can be used to allow JavaScript to control the host
           application.
                           This is a powerful feature, but also presents a security risk for applications targeted to API level
           JELLY_BEAN(4.2) or below, because JavaScript could use reflection to access an injected object's public fields. Use of this
           method in a WebView containing untrusted content could allow an attacker to manipulate the host application in unintended ways,
           executing Java code with the permissions of the host application.
                           Reference:
                             1."http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,
           java.lang.String) "
                             2.https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/
                             3.http://50.56.33.56/blog/?p=314
                             4.http://blog.trustlook.com/2013/09/04/alert-android-webview-addjavascriptinterface-code-execution-
           vulnerability/
                           Please modify the below code:
               => Le/a/a/d1;->v(Z Le/a/a/v;)V (0x194) ---> Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object;
                    Ljava/lang/String;)V
               => Le/f/b/d/a/e0/a/b0;->d0(Le/f/b/d/f/a;)V (0x92) ---> Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object;
                    Ljava/lang/String;)V
               => Le/f/b/d/h/a/fr0;-><init>(Le/f/b/d/h/a/cs0; Le/f/b/d/h/a/ds0; Ljava/lang/String; Z Z Le/f/b/d/h/a/an2; Le/f/b/d/h/a/ty;
                    Le/f/b/d/h/a/nk0; Le/f/b/d/h/a/jy; Le/f/b/d/a/a0/n; Le/f/b/d/a/a0/c; Le/f/b/d/h/a/an; Le/f/b/d/h/a/ek2;
                    Le/f/b/d/h/a/hk2;)V (0x144) ---> Landroid/webkit/WebView;->addJavascriptInterface(Ljava/lang/Object;
                    Ljava/lang/String;)V

[Warning]  Dynamic Code Loading:
           Dynamic code loading(DexClassLoader) found:
               => Le/f/b/d/h/a/tu2;->d(Le/f/b/d/h/a/ku2;)Ljava/lang/Class; (0x8a) --->
                    Ldalvik/system/DexClassLoader;-><init>(Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/ClassLoader;)V
               => Le/f/b/d/h/a/za3;->a(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String; Z)Le/f/b/d/h/a/za3; (0x1fc) --->
                    Ldalvik/system/DexClassLoader;-><init>(Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/ClassLoader;)V
               => Lcom/facebook/ads/internal/dynamicloading/DynamicLoaderFactory;->makeAdsSdkClassLoader(Landroid/content/Context;)Ljava/lan
                    g/ClassLoader; (0x126) ---> Ldalvik/system/DexClassLoader;-><init>(Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/ClassLoader;)V
               => Lcom/facebook/ads/internal/dynamicloading/DynamicLoaderFactory;->makeLegacyAdsSdkClassLoader(Landroid/content/Context;)Lda
                    lvik/system/DexClassLoader; (0xac) ---> Ldalvik/system/DexClassLoader;-><init>(Ljava/lang/String; Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/ClassLoader;)V
               => Le/f/b/d/h/a/tn3;->b(Le/f/b/d/h/a/tn3;)V (0x24) --->
                    Ldalvik/system/DexClassLoader;->loadClass(Ljava/lang/String;)Ljava/lang/Class;
               => Le/f/b/d/h/a/tu2;->d(Le/f/b/d/h/a/ku2;)Ljava/lang/Class; (0x94) --->
                    Ldalvik/system/DexClassLoader;->loadClass(Ljava/lang/String;)Ljava/lang/Class;

[Warning]  External Storage Accessing:
           External storage access found (Remember DO NOT write important files to external storages):
               => Le/a/a/v0;->s(Le/a/a/v;)Z (0x5e) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/EditorBaseActivity;->dosave(F)V (0x0) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/a/a/v0;->s(Le/a/a/v;)Z (0x124) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/f/b/d/h/a/yx;->a(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String; Ljava/util/Map;)V (0x4a) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/p/a/a/b/a;-><init>()V (0x32) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lo/a/a/b/z/y;-><clinit>()V (0x0) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/EditorActivity$112;->onClick(I)V (0x48) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/e/a/b/a;->v(Ljava/io/File; Le/e/a/a/a;)Z (0x2) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/e/b/i/a;->b()V (0x26) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/f/b/d/h/a/an;->e(Le/f/b/d/h/a/cn;)V (0x2) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/EditorActivity;->skipShareActivity()V (0x3a) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/ShareActivity;->getsavefile()Ljava/lang/String; (0xa) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Landroidx/core/content/FileProvider;->g(Landroid/content/Context;
                    Ljava/lang/String;)Landroidx/core/content/FileProvider$a; (0xcc) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lvideoeditor/videomaker/slideshow/fotoplay/ShowActivity;->setlog()V (0x16e) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lo/a/a/b/z/y;-><clinit>()V (0x14) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/a/a/v0;->s(Le/a/a/v;)Z (0xe8) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lphotoeffect/photomusic/slideshow/baselibs/videoinfo/VideoInfo;-><init>()V (0x3e) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/EditorActivity;->save()V (0x26) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Le/p/a/a/b/b;->A()Ljava/lang/String; (0xe) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;

[Warning]  AndroidManifest Exported Components Checking:
           Found "exported" components(except for Launcher) for receiving outside applications' actions (AndroidManifest.xml).
               These components can be initilized by other apps. You should add or modify the attribute to [exported="false"] if you don't
           want to.
               You can also protect it with a customized permission with "signature" or higher protectionLevel and specify in
           "android:permission" attribute.
                 activity => videoeditor.videomaker.slideshow.fotoplay.activity.EditorActivity

[Warning] <Sensitive_Information> Getting ANDROID_ID:
           This app has code getting the 64-bit number "Settings.Secure.ANDROID_ID".
                    ANDROID_ID seems a good choice for a unique device identifier. There are downsides: First, it is not 100% reliable on
           releases of Android prior to 2.2 (Froyo).
                    Also, there has been at least one widely-observed bug in a popular handset from a major manufacturer, where every
           instance has the same ANDROID_ID.
                    If you want to get an unique id for the device, we suggest you use "Installation" framework in the following article.
                    Please check the reference: http://android-developers.blogspot.tw/2011/03/identifying-app-installations.html

               => Le/d/a/a/e;->a()Ljava/lang/String; (0x14) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
               => Le/f/b/d/h/a/bk0;->r(Landroid/content/Context;)Ljava/lang/String; (0x14) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
               => Le/a/a/o0;->x()Ljava/lang/String; (0x1e) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
               => Le/f/b/d/h/a/xc2;->a(Ljava/lang/Throwable;)Le/f/b/d/h/a/yc2; (0x20) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;
               => Le/f/d/p/h/j/l;->x(Landroid/content/Context;)Z (0xc) --->
                    Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver; Ljava/lang/String;)Ljava/lang/String;

[Warning] <WebView> WebView Local File Access Attacks Checking:
           Found "setAllowFileAccess(true)" or not set(enabled by default) in WebView. The attackers could inject malicious script into
           WebView and exploit the opportunity to access local resources. This can be mitigated or prevented by disabling local file system
           access. (It is enabled by default)
                    Note that this enables or disables file system access only. Assets and resources are still accessible using
           file:///android_asset and file:///android_res.
                    The attackers can use "mWebView.loadUrl("file:///data/data/[Your_Package_Name]/[File]");" to access app's local file.
                    Reference: (1)https://labs.mwrinfosecurity.com/blog/2012/04/23/adventures-with-android-webviews/
                               (2)http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess(boolean)
                    Please add or modify "yourWebView.getSettings().setAllowFileAccess(false)" to your WebView:

               Methods where setAllowFileAccess(true):
               => Le/a/a/d1;->v(Z Le/a/a/v;)V (0x180) ---> Landroid/webkit/WebSettings;->setAllowFileAccess(Z)V
               Methods where WebSettings is used, and setAllowFileAccess might be enabled by default:
               => Le/a/a/o0$b$a;->run()V
               => Le/f/b/d/a/a0/b/a2;->a(Landroid/content/Context; Landroid/webkit/WebSettings;)Z
               => Le/f/b/d/a/a0/b/a2;->c(Landroid/content/Context;)V
               => Le/f/b/d/a/a0/b/c1;->call()Ljava/lang/Object;
               => Le/f/b/d/a/a0/b/d1;->call()Ljava/lang/Object;
               => Le/f/b/d/a/a0/b/d;->a(Landroid/content/Context; Landroid/webkit/WebSettings;)Z
               => Le/f/b/d/a/a0/b/x1;->u(Landroid/content/Context;)Ljava/lang/String;
               => Le/f/b/d/a/a0/b/y1;->call()Ljava/lang/Object;
               => Le/f/b/d/a/a0/t;-><init>(Landroid/content/Context; Le/f/b/d/h/a/yr; Ljava/lang/String; Le/f/b/d/h/a/nk0;)V
               => Le/f/b/d/h/a/dl;->run()V
               => Le/f/b/d/h/a/li1;->b(Landroid/view/View; Landroid/view/WindowManager; Le/f/b/d/h/a/mq0; Ljava/util/Map;)V
               => Le/f/b/d/h/a/nr2;-><init>(Landroid/webkit/WebView;)V
               => Le/f/b/d/h/a/pr2;->a()V
               => Le/g/a/a/a/l/b;-><init>(Landroid/webkit/WebView;)V
               => Le/g/a/a/a/l/c;->y()V
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/WebViewActivity;->initView()V

[Warning] <WebView> WebView Potential XSS Attacks Checking:
           Found "setJavaScriptEnabled(true)" in WebView, which could exposed to potential XSS attacks. Please check the web page code
           carefully and sanitize the output:
               => Le/f/b/d/h/a/nr2;-><init>(Landroid/webkit/WebView;)V (0x24) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Le/g/a/a/a/l/b;-><init>(Landroid/webkit/WebView;)V (0x28) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Le/g/a/a/a/l/c;->y()V (0x28) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Le/f/b/d/h/a/fr0;-><init>(Le/f/b/d/h/a/cs0; Le/f/b/d/h/a/ds0; Ljava/lang/String; Z Z Le/f/b/d/h/a/an2; Le/f/b/d/h/a/ty;
                    Le/f/b/d/h/a/nk0; Le/f/b/d/h/a/jy; Le/f/b/d/a/a0/n; Le/f/b/d/a/a0/c; Le/f/b/d/h/a/an; Le/f/b/d/h/a/ek2;
                    Le/f/b/d/h/a/hk2;)V (0xaa) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Le/a/a/d1;->v(Z Le/a/a/v;)V (0x140) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Le/f/b/d/a/a0/t;-><init>(Landroid/content/Context; Le/f/b/d/h/a/yr; Ljava/lang/String; Le/f/b/d/h/a/nk0;)V (0x68) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/WebViewActivity;->initView()V (0x36) --->
                    Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V
               => Le/f/b/d/h/a/pr2;->a()V (0x28) ---> Landroid/webkit/WebSettings;->setJavaScriptEnabled(Z)V

[Notice]  AndroidManifest Adb Backup Checking:
           ADB Backup is ENABLED for this app (default: ENABLED). ADB Backup is a good tool for backing up all of your files. If it's open
           for this app, people who have your phone can copy all of the sensitive data for this app in your phone (Prerequisite: 1.Unlock
           phone's screen 2.Open the developer mode). The sensitive data may include lifetime access token, username or password, etc.
               Security case related to ADB Backup:
               1.http://www.securityfocus.com/archive/1/530288/30/0/threaded
               2.http://blog.c22.cc/advisories/cve-2013-5112-evernote-android-insecure-storage-of-pin-data-bypass-of-pin-protection/
               3.http://nelenkov.blogspot.co.uk/2012/06/unpacking-android-backups.html
               Reference: http://developer.android.com/guide/topics/manifest/application-element.html#allowbackup

[Notice] <Database><#CVE-2011-3901#> Android SQLite Databases Vulnerability Checking:
           This app is using Android SQLite databases but it's "NOT" suffering from SQLite Journal Information Disclosure Vulnerability.
[Notice]  File Unsafe Delete Checking:
           Everything you delete may be recovered by any user or attacker, especially rooted devices.
               Please make sure do not use "file.delete()" to delete essential files.
               Check this video: https://www.youtube.com/watch?v=tGw1fxUD-uY
               => Lc/u/a/c$a;->a(Ljava/lang/String;)V (0x7a) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/j/n;->p([Ljava/io/File;)V (0x12) ---> Ljava/io/File;->delete()Z
               => Le/i/a/a0;->a()V (0x2c) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/k;->b(Landroid/content/Context; Landroid/content/res/Resources; I)Ljava/nio/ByteBuffer; (0x2c) --->
                    Ljava/io/File;->delete()Z
               => Le/a/a/e0;->W(Lorg/json/JSONObject;)Z (0x100) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/e;->b(Landroid/content/Context; Lc/i/e/f/c$b; Landroid/content/res/Resources; I)Landroid/graphics/Typeface; (0x74)
                    ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/n/g;->f()V (0x28) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/e$a;->d(Lorg/json/JSONObject;)V (0x1fe) ---> Ljava/io/File;->delete()Z
               => Lc/q/c;->c0()Ljava/util/List; (0x1d8) ---> Ljava/io/File;->delete()Z
               => Le/a/a/r0;->f()Z (0x198) ---> Ljava/io/File;->delete()Z
               => Le/b/a/w/b;->d()Ljava/io/File; (0x26) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/k;->b(Landroid/content/Context; Landroid/content/res/Resources; I)Ljava/nio/ByteBuffer; (0x1c) --->
                    Ljava/io/File;->delete()Z
               => Le/c/c/p/e;->i()V (0x82) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->d(Landroid/content/Context; Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x46) --->
                    Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/y;->c(Ljava/lang/String;)V (0xfc) ---> Ljava/io/File;->delete()Z
               => Le/a/a/r0;->h()Z (0x2a) ---> Ljava/io/File;->delete()Z
               => Le/c/c/p/e;->p(Ljava/lang/String;)V (0xa) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/e$a;->d(Lorg/json/JSONObject;)V (0x1c0) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/l;->a(Ljava/io/File;)V (0x0) ---> Ljava/io/File;->delete()Z
               => Le/e/a/b/a$g;->c(Ljava/io/File;)V (0x20) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/n/g;->B()Ljava/util/List; (0xb0) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/uo0;->f(Ljava/lang/String;)Z (0xdc) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->e(Landroid/content/Context; Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface;
                    (0x34) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/j/p;->d()Z (0x8) ---> Ljava/io/File;->delete()Z
               => Lc/q/c;->v(Ljava/util/zip/ZipFile; Ljava/util/zip/ZipEntry; Ljava/io/File; Ljava/lang/String;)V (0x1fe) --->
                    Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/e$a;->d(Lorg/json/JSONObject;)V (0x182) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->open(Ljava/io/File; I I J)Lcom/bumptech/glide/disklrucache/DiskLruCache;
                    (0x44) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/ShowActivity;->delnoend()V (0x98) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->deleteIfExists(Ljava/io/File;)V (0xc) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/dm;->d(Ljava/lang/String;)V (0xa) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/dm;->b(Ljava/lang/String; Le/f/b/d/h/a/nr3;)V (0x2c6) ---> Ljava/io/File;->delete()Z
               => Lc/q/a;->d(Landroid/content/Context;)V (0xf8) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/mu2;->e(Ljava/io/File;)Z (0x4e) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/n/g;->I(Ljava/io/File;)V (0x32) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/n/g;->c()V (0x56) ---> Ljava/io/File;->delete()Z
               => Le/a/a/r0;->h()Z (0x5e) ---> Ljava/io/File;->delete()Z
               => Le/a/a/r0;->f()Z (0x13c) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/k/d;->d()V (0xa) ---> Ljava/io/File;->delete()Z
               => Le/e/b/c/a;->b(Ljava/io/File;)Z (0x12) ---> Ljava/io/File;->delete()Z
               => Le/a/a/c1;->z(Le/a/a/v;)Z (0x1c4) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/dm;->c()V (0xb4) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/a;->a(Ljava/lang/String;)V (0x16) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/i/b/j;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; (0x94) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/y;->f(Ljava/io/File;)V (0x44) ---> Ljava/io/File;->delete()Z
               => Le/a/a/e0;->W(Lorg/json/JSONObject;)Z (0xa6) ---> Ljava/io/File;->delete()Z
               => Landroidx/core/content/FileProvider;->delete(Landroid/net/Uri; Ljava/lang/String; [Ljava/lang/String;)I (0xc) --->
                    Ljava/io/File;->delete()Z
               => Le/i/a/m0/f;->g(Ljava/lang/String;)V (0x1a) ---> Ljava/io/File;->delete()Z
               => Le/i/a/f0/f;->w()V (0xd6) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/y;->g(Ljava/io/File;)V (0x58) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/e;->b(Landroid/content/Context; Lc/i/e/f/c$b; Landroid/content/res/Resources; I)Landroid/graphics/Typeface; (0x6c)
                    ---> Ljava/io/File;->delete()Z
               => Le/p/a/a/b/b;->F(Ljava/io/File; Ljava/util/List;)Z (0xb4) ---> Ljava/io/File;->delete()Z
               => Le/e/a/b/a$f;->g()Z (0x14) ---> Ljava/io/File;->delete()Z
               => Lp/a/b/c;->b(Landroid/content/Context; Ljava/lang/String; Ljava/lang/String;)V (0x64) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/e;->b(Landroid/content/Context; Lc/i/e/f/c$b; Landroid/content/res/Resources; I)Landroid/graphics/Typeface; (0x8a)
                    ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->e(Landroid/content/Context; Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface;
                    (0x46) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/ShowActivity;->movedraft()V (0x24) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->d(Landroid/content/Context; Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x3e) --->
                    Ljava/io/File;->delete()Z
               => Lc/q/c;->v(Ljava/util/zip/ZipFile; Ljava/util/zip/ZipEntry; Ljava/io/File; Ljava/lang/String;)V (0x134) --->
                    Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/e$a;->c(Lorg/json/JSONObject;)V (0x20c) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/b/c$f;->run()V (0x4a) ---> Ljava/io/File;->delete()Z
               => Lcom/facebook/soloader/SysUtil;->b(Ljava/io/File;)V (0x32) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->d(Landroid/content/Context; Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x1c) --->
                    Ljava/io/File;->delete()Z
               => Lc/q/a;->d(Landroid/content/Context;)V (0x16c) ---> Ljava/io/File;->delete()Z
               => Lcom/facebook/common/file/FileUtils;->a(Ljava/io/File;)V (0x1a) ---> Ljava/io/File;->delete()Z
               => Le/a/a/r0;->f()Z (0x82) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/dm;->b(Ljava/lang/String; Le/f/b/d/h/a/nr3;)V (0x1bc) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->remove(Ljava/lang/String;)Z (0x4a) ---> Ljava/io/File;->delete()Z
               => Le/a/a/c1;->k(Ljava/io/File;)Z (0x66) ---> Ljava/io/File;->delete()Z
               => Le/i/a/f0/f;->w()V (0x4a) ---> Ljava/io/File;->delete()Z
               => Le/i/a/m0/f;->e(Ljava/lang/String;)V (0x1a) ---> Ljava/io/File;->delete()Z
               => Le/c/c/p/e;->initialize()V (0xae) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->e(Landroid/content/Context; Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface;
                    (0x1c) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/EditorActivity;->skipShareActivity()V (0x158) --->
                    Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/AddFontActivity;->copyFile(Ljava/lang/String; Ljava/lang/String;)Z
                    (0x66) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/y;->f(Ljava/io/File;)V (0x68) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/n/g;->g(Ljava/lang/String;)V (0x6e) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/ExtractMusicActivity;->muxerAudio(Ljava/lang/String;
                    Ljava/lang/String; J J)V (0x62c) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/k;->b(Landroid/content/Context; Landroid/content/res/Resources; I)Ljava/nio/ByteBuffer; (0x36) --->
                    Ljava/io/File;->delete()Z
               => Lc/q/c;->n()V (0xb2) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/y;->g(Ljava/io/File;)V (0x3c) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/ShowActivity;->delDraft(I Z)V (0x102) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/EditorActivity;->checklocal(Ljava/lang/String;)V (0xfe) --->
                    Ljava/io/File;->delete()Z
               => Le/a/a/r0;->h()Z (0x44) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/i/b/g3;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; (0x56) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/ExtractMusicActivity;->muxerAudio(Ljava/lang/String;
                    Ljava/lang/String; J J)V (0x55c) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/a;->b(Ljava/lang/String;)V (0x16) ---> Ljava/io/File;->delete()Z
               => Le/e/a/b/a$g;->a(Ljava/io/File;)V (0x14) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/za3;->y(Ljava/io/File;)V (0x38) ---> Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/Util;->deleteContents(Ljava/io/File;)V (0x2a) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/mu2;->d(Ljava/io/File; Z)Ljava/io/File; (0x1c) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/z/l;->b(Ljava/lang/String;)V (0x5e) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/MusicActivity$11;->onClick(Landroid/view/View;)V (0x28) --->
                    Ljava/io/File;->delete()Z
               => Lc/i/f/e;->b(Landroid/content/Context; Lc/i/e/f/c$b; Landroid/content/res/Resources; I)Landroid/graphics/Typeface; (0x40)
                    ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->d(Landroid/content/Context; Ljava/io/InputStream;)Landroid/graphics/Typeface; (0x34) --->
                    Ljava/io/File;->delete()Z
               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->rebuildJournal()V (0x194) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/v/f;->a(Landroid/content/Context; Landroid/graphics/Bitmap; Ljava/lang/String; Ljava/lang/String;
                    Landroid/graphics/Bitmap$CompressFormat; Lo/a/a/b/v/e;)V (0x12e) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/a;->a(Ljava/lang/String;)V (0x3e) ---> Ljava/io/File;->delete()Z
               => Le/a/a/c1;->k(Ljava/io/File;)Z (0x5a) ---> Ljava/io/File;->delete()Z
               => Lvideoeditor/videomaker/slideshow/fotoplay/activity/ExtractMusicActivity;->muxerAudio(Ljava/lang/String;
                    Ljava/lang/String; J J)V (0x38e) ---> Ljava/io/File;->delete()Z
               => Lo/a/a/b/r/a;->b(Ljava/lang/String;)V (0x2a) ---> Ljava/io/File;->delete()Z
               => Lc/i/f/e;->b(Landroid/content/Context; Lc/i/e/f/c$b; Landroid/content/res/Resources; I)Landroid/graphics/Typeface; (0x82)
                    ---> Ljava/io/File;->delete()Z
               => Lc/i/f/j;->e(Landroid/content/Context; Landroid/content/res/Resources; I Ljava/lang/String; I)Landroid/graphics/Typeface;
                    (0x3e) ---> Ljava/io/File;->delete()Z
               => Le/f/d/p/h/j/n;->O()Le/f/b/d/l/j; (0x80) ---> Ljava/io/File;->delete()Z
               => Le/c/c/p/e;->c(Ljava/lang/String; Le/c/c/a$a;)V (0xc2) ---> Ljava/io/File;->delete()Z
               => Le/e/a/b/a;->m(Ljava/io/File;)J (0x1a) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/uo0;->f(Ljava/lang/String;)Z (0xf8) ---> Ljava/io/File;->delete()Z
               => Le/a/a/c1;->k(Ljava/io/File;)Z (0x1c) ---> Ljava/io/File;->delete()Z
               => Lphotoeffect/photomusic/slideshow/basecontent/application/FotoPlayApplication;->b()V (0x30) ---> Ljava/io/File;->delete()Z
               => Le/i/a/f0/f;->w()V (0x12e) ---> Ljava/io/File;->delete()Z
               => Le/f/b/d/h/a/uo0;->f(Ljava/lang/String;)Z (0x958) ---> Ljava/io/File;->delete()Z
               => Lcom/facebook/common/file/FileUtils;->b(Ljava/io/File; Ljava/io/File;)V (0xc) ---> Ljava/io/File;->delete()Z

[Notice] <Debug><Hacker> Codes for Checking Android Debug Mode:
           Detected code that checks whether debug mode is enabled in:
               Le/f/b/a/a/k/c;->j(Landroid/content/Context;)Z
               Le/f/b/d/e/i;->f(Ljava/lang/String; Z Z)Le/f/b/d/e/m0;

[Notice] <Hacker> APK Installing Source Checking:
           This app has code checking APK installer sources(e.g. from Google Play, from Amazon, etc.). It might be used to check for whether
           the app is hacked by the attackers.
               => Le/f/b/d/i/b/f3;->j()V (0x68) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
               => Le/f/d/p/h/j/a0;->b(Landroid/content/Context;)Ljava/lang/String; (0x10) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;
               => Lcom/google/firebase/FirebaseCommonRegistrar;->d(Landroid/content/Context;)Ljava/lang/String; (0x10) --->
                    Landroid/content/pm/PackageManager;->getInstallerPackageName(Ljava/lang/String;)Ljava/lang/String;

[Notice] <KeyStore><Hacker> Possible KeyStore File Location:
           BKS possible keystore file:
               stamp-cert-sha256

[Notice] <Signature><Hacker> Getting Signature Code Checking:
           This app has code checking the package signature in the code. It might be used to check for whether the app is hacked by the
           attackers.
               => Lc/i/k/b;->h(Landroid/content/pm/PackageManager; Lc/i/k/a;
                    Landroid/content/res/Resources;)Landroid/content/pm/ProviderInfo; (0x36) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Le/f/b/d/e/i;->f(Ljava/lang/String; Z Z)Le/f/b/d/e/m0; (0x56) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Le/f/b/d/e/p/s;->a(Landroid/content/Context; I)Z (0x20) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;
               => Le/f/b/d/e/h;->g(Landroid/content/Context; I)I (0xfc) --->
                    Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;

[Notice]  Native Library Loading Checking:
           Native library loading codes(System.loadLibrary(...)) found:
               [libavformat.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x22) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libavcodec.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x18) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libpng.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x72) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libavutil.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0xe) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libx264.157.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x68) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libyjlib.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x4) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libyuv.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x5e) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libpl_droidsonroids_gif.so]
               => Lp/a/a/h;->b()V (0x4) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libpostproc.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x54) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libavdevice.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x4a) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libavfilter.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x40) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libmp3lame.so]
               => Lcom/zlw/main/recorderlib/recorder/mp3/Mp3Encoder;-><clinit>()V (0x4) --->
                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libmmkv.so]
               => Lcom/tencent/mmkv/MMKV;->g(Ljava/lang/String; Lcom/tencent/mmkv/MMKV$b; Le/m/a/c;)Ljava/lang/String; (0x10) --->
                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libswscale.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x36) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V
               [libswresample.so]
               => Lcom/youjia/yjvideolib/yjvideolib;-><clinit>()V (0x2c) ---> Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V

[Notice]  AndroidManifest Exported Components Checking 2:
           Found "exported" components(except for Launcher) for receiving Google's "Android" actions (AndroidManifest.xml):
                 activity => videoeditor.videomaker.slideshow.fotoplay.activity.ShareActivity

[Info] <Command> Runtime Command Checking:
           This app is not using critical function 'Runtime.getRuntime().exec("...")'.
[Info] <Command> Executing "root" or System Privilege Checking:
           Did not find codes checking "root" permission(su) or getting system permission (It's still possible we did not find out).
[Info] <Database> SQLiteDatabase Transaction Deprecated Checking:
           Ignore checking "SQLiteDatabase:beginTransactionNonExclusive" because your set minSdk >= 11.
[Info] <Database> Android SQLite Databases Encryption (SQLite Encryption Extension (SEE)):
           This app is "NOT" using SQLite Encryption Extension (SEE) on Android (http://www.sqlite.org/android) to encrypt or decrpyt
           databases.
[Info] <Database> Android SQLite Databases Encryption (SQLCipher):
           This app is "NOT" using SQLCipher(http://sqlcipher.net/) to encrypt or decrpyt databases.
[Info] <Debug> Android Debug Mode Checking:
           DEBUG mode is OFF(android:debuggable="false") in AndroidManifest.xml.
[Info] <#BID 64208, CVE-2013-6271#> Fragment Vulnerability Checking:
           Did not detect the vulnerability of "Fragment" dynamically loading into "PreferenceActivity" or "SherlockPreferenceActivity"
[Info] <Framework> App framework identification:
           No frameworks detected (checking for Xamarin, Flutter, React Native). Furthermore, no encryption frameworks were detected
           (checking for iJiami, Bangcle)
[Info] <Hacker> Base64 String Encryption:
           No encoded Base64 String or Urls found.
[Info] <Database><Hacker> Key for Android SQLite Databases Encryption:
           Did not find using the symmetric key(PRAGMA key) to encrypt the SQLite databases (It's still possible that it might use but we
           did not find out).
[Info] <Debug> Android Debug Certificate Checking:
           App is signed with a production certificate. This is good.
[Info] <KeyStore><Hacker> KeyStore Protection Checking:
           Ignore checking KeyStore protected by password or not because you're not using KeyStore.
[Info] <Hacker> Code Setting Preventing Screenshot Capturing:
           Did not detect this app has code setting preventing screenshot capturing.
[Info]  HttpURLConnection Android Bug Checking:
           Ignore checking "http.keepAlive" because you're not using "HttpURLConnection" and min_Sdk > 8.
[Info] <KeyStore> KeyStore Type Checking:
           KeyStore 'BKS' type check OK
[Info]  Google Cloud Messaging Suggestion:
           Nothing to suggest.
[Info] <#CVE-2013-4787#> Master Key Type I Vulnerability:
           No Master Key Type I Vulnerability in this APK.
[Info]  App Sandbox Permission Checking:
           No security issues "MODE_WORLD_READABLE" or "MODE_WORLD_WRITEABLE" found on 'openOrCreateDatabase' or 'openOrCreateDatabase2' or
           'getDir' or 'getSharedPreferences' or 'openFileOutput'
[Info]  AndroidManifest Dangerous ProtectionLevel of Permission Checking:
           No "dangerous" protection level customized permission found (AndroidManifest.xml).
[Info]  AndroidManifest PermissionGroup Checking:
           PermissionGroup in permission tag of AndroidManifest sets correctly.
[Info] <Implicit_Intent> Implicit Service Checking:
           No dangerous implicit service.
[Info]  AndroidManifest "intent-filter" Settings Checking:
           "intent-filter" of AndroidManifest.xml check OK.
[Info]  AndroidManifest Normal ProtectionLevel of Permission Checking:
           No default or "normal" protection level customized permission found (AndroidManifest.xml).
[Info] <#CVE-2013-6272#> AndroidManifest Exported Lost Prefix Checking:
           No exported components that forgot to add "android:" prefix.
[Info]  AndroidManifest ContentProvider Exported Checking:
           No exported "ContentProvider" found (AndroidManifest.xml).
[Info] <Sensitive_Information> Getting IMEI and Device ID:
           Did not detect this app is getting the "device id(IMEI)" by "TelephonyManager.getDeviceId()" approach.
[Info]  Codes for Sending SMS:
           Did not detect this app has code for sending SMS messages (sendDataMessage, sendMultipartTextMessage or sendTextMessage).
[Info] <System> AndroidManifest sharedUserId Checking:
           This app does not use "android.uid.system" sharedUserId.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Custom Classes):
           Self-defined HOSTNAME VERIFIER checking OK.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Fields):
           Critical vulnerability "ALLOW_ALL_HOSTNAME_VERIFIER" field setting or "AllowAllHostnameVerifier" class instance not found.
[Info] <SSL_Security> SSL Implementation Checking (Insecure component):
           Did not detect SSLSocketFactory by insecure method "getInsecure".
[Info] <SSL_Security> SSL Implementation Checking (HttpHost):
           DEFAULT_SCHEME_NAME for HttpHost check: OK
[Info] <SSL_Security> SSL Implementation Checking (WebViewClient for WebView):
           Did not detect critical usage of "WebViewClient"(MITM Vulnerability).
[Info] <SSL_Security> SSL Certificate Verification Checking:
           Did not find vulnerable X509Certificate code.
[Info] <Strandhogg> Standhogg 2.0:
           This application does not seem to be vulnerable to the Standhogg 2.0 vulnerability
[Info]  Unnecessary Permission Checking:
           Permission 'android.permission.ACCESS_MOCK_LOCATION' sets correctly.
[Info]  Accessing the Internet Checking:
           This app is using the Internet via HTTP protocol.
[Info]  AndroidManifest System Use Permission Checking:
           No system-level critical use-permission found.
------------------------------------------------------------
AndroBugs analyzing time: 2.846166 secs
HACKER_DEBUGGABLE_CHECK elapsed time: 0.578396648999842 secs
Total elapsed time: 41.955194 secs
